<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Column1.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column7.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column3.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column2.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column8.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column6.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column9.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column4.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <metadata name="Column5.UserAddedColumn" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>